// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hello.proto

#ifndef PROTOBUF_hello_2eproto__INCLUDED
#define PROTOBUF_hello_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace hello {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_hello_2eproto();
void protobuf_AssignDesc_hello_2eproto();
void protobuf_ShutdownFile_hello_2eproto();

class HeartbeatRequest;
class HeartbeatRespond;
class DefaultRequest;
class DefaultRequest_Article;
class DefaultRespond;

// ===================================================================

class HeartbeatRequest : public ::google::protobuf::Message {
 public:
  HeartbeatRequest();
  virtual ~HeartbeatRequest();

  HeartbeatRequest(const HeartbeatRequest& from);

  inline HeartbeatRequest& operator=(const HeartbeatRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartbeatRequest& default_instance();

  void Swap(HeartbeatRequest* other);

  // implements Message ----------------------------------------------

  HeartbeatRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeartbeatRequest& from);
  void MergeFrom(const HeartbeatRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string sequence = 1;
  inline bool has_sequence() const;
  inline void clear_sequence();
  static const int kSequenceFieldNumber = 1;
  inline const ::std::string& sequence() const;
  inline void set_sequence(const ::std::string& value);
  inline void set_sequence(const char* value);
  inline void set_sequence(const char* value, size_t size);
  inline ::std::string* mutable_sequence();
  inline ::std::string* release_sequence();
  inline void set_allocated_sequence(::std::string* sequence);

  // @@protoc_insertion_point(class_scope:hello.HeartbeatRequest)
 private:
  inline void set_has_sequence();
  inline void clear_has_sequence();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* sequence_;
  friend void  protobuf_AddDesc_hello_2eproto();
  friend void protobuf_AssignDesc_hello_2eproto();
  friend void protobuf_ShutdownFile_hello_2eproto();

  void InitAsDefaultInstance();
  static HeartbeatRequest* default_instance_;
};
// -------------------------------------------------------------------

class HeartbeatRespond : public ::google::protobuf::Message {
 public:
  HeartbeatRespond();
  virtual ~HeartbeatRespond();

  HeartbeatRespond(const HeartbeatRespond& from);

  inline HeartbeatRespond& operator=(const HeartbeatRespond& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartbeatRespond& default_instance();

  void Swap(HeartbeatRespond* other);

  // implements Message ----------------------------------------------

  HeartbeatRespond* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeartbeatRespond& from);
  void MergeFrom(const HeartbeatRespond& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string sequence = 1;
  inline bool has_sequence() const;
  inline void clear_sequence();
  static const int kSequenceFieldNumber = 1;
  inline const ::std::string& sequence() const;
  inline void set_sequence(const ::std::string& value);
  inline void set_sequence(const char* value);
  inline void set_sequence(const char* value, size_t size);
  inline ::std::string* mutable_sequence();
  inline ::std::string* release_sequence();
  inline void set_allocated_sequence(::std::string* sequence);

  // @@protoc_insertion_point(class_scope:hello.HeartbeatRespond)
 private:
  inline void set_has_sequence();
  inline void clear_has_sequence();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* sequence_;
  friend void  protobuf_AddDesc_hello_2eproto();
  friend void protobuf_AssignDesc_hello_2eproto();
  friend void protobuf_ShutdownFile_hello_2eproto();

  void InitAsDefaultInstance();
  static HeartbeatRespond* default_instance_;
};
// -------------------------------------------------------------------

class DefaultRequest_Article : public ::google::protobuf::Message {
 public:
  DefaultRequest_Article();
  virtual ~DefaultRequest_Article();

  DefaultRequest_Article(const DefaultRequest_Article& from);

  inline DefaultRequest_Article& operator=(const DefaultRequest_Article& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DefaultRequest_Article& default_instance();

  void Swap(DefaultRequest_Article* other);

  // implements Message ----------------------------------------------

  DefaultRequest_Article* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DefaultRequest_Article& from);
  void MergeFrom(const DefaultRequest_Article& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string title = 1;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 1;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const char* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  inline void set_allocated_title(::std::string* title);

  // required string author = 2;
  inline bool has_author() const;
  inline void clear_author();
  static const int kAuthorFieldNumber = 2;
  inline const ::std::string& author() const;
  inline void set_author(const ::std::string& value);
  inline void set_author(const char* value);
  inline void set_author(const char* value, size_t size);
  inline ::std::string* mutable_author();
  inline ::std::string* release_author();
  inline void set_allocated_author(::std::string* author);

  // @@protoc_insertion_point(class_scope:hello.DefaultRequest.Article)
 private:
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_author();
  inline void clear_has_author();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* title_;
  ::std::string* author_;
  friend void  protobuf_AddDesc_hello_2eproto();
  friend void protobuf_AssignDesc_hello_2eproto();
  friend void protobuf_ShutdownFile_hello_2eproto();

  void InitAsDefaultInstance();
  static DefaultRequest_Article* default_instance_;
};
// -------------------------------------------------------------------

class DefaultRequest : public ::google::protobuf::Message {
 public:
  DefaultRequest();
  virtual ~DefaultRequest();

  DefaultRequest(const DefaultRequest& from);

  inline DefaultRequest& operator=(const DefaultRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DefaultRequest& default_instance();

  void Swap(DefaultRequest* other);

  // implements Message ----------------------------------------------

  DefaultRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DefaultRequest& from);
  void MergeFrom(const DefaultRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef DefaultRequest_Article Article;

  // accessors -------------------------------------------------------

  // required string sequence = 1;
  inline bool has_sequence() const;
  inline void clear_sequence();
  static const int kSequenceFieldNumber = 1;
  inline const ::std::string& sequence() const;
  inline void set_sequence(const ::std::string& value);
  inline void set_sequence(const char* value);
  inline void set_sequence(const char* value, size_t size);
  inline ::std::string* mutable_sequence();
  inline ::std::string* release_sequence();
  inline void set_allocated_sequence(::std::string* sequence);

  // required int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int32 column3 = 3;
  inline bool has_column3() const;
  inline void clear_column3();
  static const int kColumn3FieldNumber = 3;
  inline ::google::protobuf::int32 column3() const;
  inline void set_column3(::google::protobuf::int32 value);

  // required int32 column4 = 4;
  inline bool has_column4() const;
  inline void clear_column4();
  static const int kColumn4FieldNumber = 4;
  inline ::google::protobuf::int32 column4() const;
  inline void set_column4(::google::protobuf::int32 value);

  // required int32 column5 = 5;
  inline bool has_column5() const;
  inline void clear_column5();
  static const int kColumn5FieldNumber = 5;
  inline ::google::protobuf::int32 column5() const;
  inline void set_column5(::google::protobuf::int32 value);

  // required int32 column6 = 6;
  inline bool has_column6() const;
  inline void clear_column6();
  static const int kColumn6FieldNumber = 6;
  inline ::google::protobuf::int32 column6() const;
  inline void set_column6(::google::protobuf::int32 value);

  // required int32 column7 = 7;
  inline bool has_column7() const;
  inline void clear_column7();
  static const int kColumn7FieldNumber = 7;
  inline ::google::protobuf::int32 column7() const;
  inline void set_column7(::google::protobuf::int32 value);

  // repeated .hello.DefaultRequest.Article articlelist = 8;
  inline int articlelist_size() const;
  inline void clear_articlelist();
  static const int kArticlelistFieldNumber = 8;
  inline const ::hello::DefaultRequest_Article& articlelist(int index) const;
  inline ::hello::DefaultRequest_Article* mutable_articlelist(int index);
  inline ::hello::DefaultRequest_Article* add_articlelist();
  inline const ::google::protobuf::RepeatedPtrField< ::hello::DefaultRequest_Article >&
      articlelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::hello::DefaultRequest_Article >*
      mutable_articlelist();

  // @@protoc_insertion_point(class_scope:hello.DefaultRequest)
 private:
  inline void set_has_sequence();
  inline void clear_has_sequence();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_column3();
  inline void clear_has_column3();
  inline void set_has_column4();
  inline void clear_has_column4();
  inline void set_has_column5();
  inline void clear_has_column5();
  inline void set_has_column6();
  inline void clear_has_column6();
  inline void set_has_column7();
  inline void clear_has_column7();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* sequence_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 column3_;
  ::google::protobuf::int32 column4_;
  ::google::protobuf::int32 column5_;
  ::google::protobuf::int32 column6_;
  ::google::protobuf::int32 column7_;
  ::google::protobuf::RepeatedPtrField< ::hello::DefaultRequest_Article > articlelist_;
  friend void  protobuf_AddDesc_hello_2eproto();
  friend void protobuf_AssignDesc_hello_2eproto();
  friend void protobuf_ShutdownFile_hello_2eproto();

  void InitAsDefaultInstance();
  static DefaultRequest* default_instance_;
};
// -------------------------------------------------------------------

class DefaultRespond : public ::google::protobuf::Message {
 public:
  DefaultRespond();
  virtual ~DefaultRespond();

  DefaultRespond(const DefaultRespond& from);

  inline DefaultRespond& operator=(const DefaultRespond& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DefaultRespond& default_instance();

  void Swap(DefaultRespond* other);

  // implements Message ----------------------------------------------

  DefaultRespond* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DefaultRespond& from);
  void MergeFrom(const DefaultRespond& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string sequence = 1;
  inline bool has_sequence() const;
  inline void clear_sequence();
  static const int kSequenceFieldNumber = 1;
  inline const ::std::string& sequence() const;
  inline void set_sequence(const ::std::string& value);
  inline void set_sequence(const char* value);
  inline void set_sequence(const char* value, size_t size);
  inline ::std::string* mutable_sequence();
  inline ::std::string* release_sequence();
  inline void set_allocated_sequence(::std::string* sequence);

  // required int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required string return = 3;
  inline bool has_return_() const;
  inline void clear_return_();
  static const int kReturnFieldNumber = 3;
  inline const ::std::string& return_() const;
  inline void set_return_(const ::std::string& value);
  inline void set_return_(const char* value);
  inline void set_return_(const char* value, size_t size);
  inline ::std::string* mutable_return_();
  inline ::std::string* release_return_();
  inline void set_allocated_return_(::std::string* return_);

  // @@protoc_insertion_point(class_scope:hello.DefaultRespond)
 private:
  inline void set_has_sequence();
  inline void clear_has_sequence();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_return_();
  inline void clear_has_return_();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* sequence_;
  ::std::string* return__;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_hello_2eproto();
  friend void protobuf_AssignDesc_hello_2eproto();
  friend void protobuf_ShutdownFile_hello_2eproto();

  void InitAsDefaultInstance();
  static DefaultRespond* default_instance_;
};
// ===================================================================


// ===================================================================

// HeartbeatRequest

// required string sequence = 1;
inline bool HeartbeatRequest::has_sequence() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeartbeatRequest::set_has_sequence() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeartbeatRequest::clear_has_sequence() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeartbeatRequest::clear_sequence() {
  if (sequence_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sequence_->clear();
  }
  clear_has_sequence();
}
inline const ::std::string& HeartbeatRequest::sequence() const {
  // @@protoc_insertion_point(field_get:hello.HeartbeatRequest.sequence)
  return *sequence_;
}
inline void HeartbeatRequest::set_sequence(const ::std::string& value) {
  set_has_sequence();
  if (sequence_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sequence_ = new ::std::string;
  }
  sequence_->assign(value);
  // @@protoc_insertion_point(field_set:hello.HeartbeatRequest.sequence)
}
inline void HeartbeatRequest::set_sequence(const char* value) {
  set_has_sequence();
  if (sequence_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sequence_ = new ::std::string;
  }
  sequence_->assign(value);
  // @@protoc_insertion_point(field_set_char:hello.HeartbeatRequest.sequence)
}
inline void HeartbeatRequest::set_sequence(const char* value, size_t size) {
  set_has_sequence();
  if (sequence_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sequence_ = new ::std::string;
  }
  sequence_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:hello.HeartbeatRequest.sequence)
}
inline ::std::string* HeartbeatRequest::mutable_sequence() {
  set_has_sequence();
  if (sequence_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sequence_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:hello.HeartbeatRequest.sequence)
  return sequence_;
}
inline ::std::string* HeartbeatRequest::release_sequence() {
  clear_has_sequence();
  if (sequence_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sequence_;
    sequence_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HeartbeatRequest::set_allocated_sequence(::std::string* sequence) {
  if (sequence_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sequence_;
  }
  if (sequence) {
    set_has_sequence();
    sequence_ = sequence;
  } else {
    clear_has_sequence();
    sequence_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:hello.HeartbeatRequest.sequence)
}

// -------------------------------------------------------------------

// HeartbeatRespond

// required string sequence = 1;
inline bool HeartbeatRespond::has_sequence() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeartbeatRespond::set_has_sequence() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeartbeatRespond::clear_has_sequence() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeartbeatRespond::clear_sequence() {
  if (sequence_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sequence_->clear();
  }
  clear_has_sequence();
}
inline const ::std::string& HeartbeatRespond::sequence() const {
  // @@protoc_insertion_point(field_get:hello.HeartbeatRespond.sequence)
  return *sequence_;
}
inline void HeartbeatRespond::set_sequence(const ::std::string& value) {
  set_has_sequence();
  if (sequence_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sequence_ = new ::std::string;
  }
  sequence_->assign(value);
  // @@protoc_insertion_point(field_set:hello.HeartbeatRespond.sequence)
}
inline void HeartbeatRespond::set_sequence(const char* value) {
  set_has_sequence();
  if (sequence_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sequence_ = new ::std::string;
  }
  sequence_->assign(value);
  // @@protoc_insertion_point(field_set_char:hello.HeartbeatRespond.sequence)
}
inline void HeartbeatRespond::set_sequence(const char* value, size_t size) {
  set_has_sequence();
  if (sequence_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sequence_ = new ::std::string;
  }
  sequence_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:hello.HeartbeatRespond.sequence)
}
inline ::std::string* HeartbeatRespond::mutable_sequence() {
  set_has_sequence();
  if (sequence_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sequence_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:hello.HeartbeatRespond.sequence)
  return sequence_;
}
inline ::std::string* HeartbeatRespond::release_sequence() {
  clear_has_sequence();
  if (sequence_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sequence_;
    sequence_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HeartbeatRespond::set_allocated_sequence(::std::string* sequence) {
  if (sequence_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sequence_;
  }
  if (sequence) {
    set_has_sequence();
    sequence_ = sequence;
  } else {
    clear_has_sequence();
    sequence_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:hello.HeartbeatRespond.sequence)
}

// -------------------------------------------------------------------

// DefaultRequest_Article

// required string title = 1;
inline bool DefaultRequest_Article::has_title() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DefaultRequest_Article::set_has_title() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DefaultRequest_Article::clear_has_title() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DefaultRequest_Article::clear_title() {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& DefaultRequest_Article::title() const {
  // @@protoc_insertion_point(field_get:hello.DefaultRequest.Article.title)
  return *title_;
}
inline void DefaultRequest_Article::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(value);
  // @@protoc_insertion_point(field_set:hello.DefaultRequest.Article.title)
}
inline void DefaultRequest_Article::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(value);
  // @@protoc_insertion_point(field_set_char:hello.DefaultRequest.Article.title)
}
inline void DefaultRequest_Article::set_title(const char* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:hello.DefaultRequest.Article.title)
}
inline ::std::string* DefaultRequest_Article::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:hello.DefaultRequest.Article.title)
  return title_;
}
inline ::std::string* DefaultRequest_Article::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DefaultRequest_Article::set_allocated_title(::std::string* title) {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete title_;
  }
  if (title) {
    set_has_title();
    title_ = title;
  } else {
    clear_has_title();
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:hello.DefaultRequest.Article.title)
}

// required string author = 2;
inline bool DefaultRequest_Article::has_author() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DefaultRequest_Article::set_has_author() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DefaultRequest_Article::clear_has_author() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DefaultRequest_Article::clear_author() {
  if (author_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    author_->clear();
  }
  clear_has_author();
}
inline const ::std::string& DefaultRequest_Article::author() const {
  // @@protoc_insertion_point(field_get:hello.DefaultRequest.Article.author)
  return *author_;
}
inline void DefaultRequest_Article::set_author(const ::std::string& value) {
  set_has_author();
  if (author_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    author_ = new ::std::string;
  }
  author_->assign(value);
  // @@protoc_insertion_point(field_set:hello.DefaultRequest.Article.author)
}
inline void DefaultRequest_Article::set_author(const char* value) {
  set_has_author();
  if (author_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    author_ = new ::std::string;
  }
  author_->assign(value);
  // @@protoc_insertion_point(field_set_char:hello.DefaultRequest.Article.author)
}
inline void DefaultRequest_Article::set_author(const char* value, size_t size) {
  set_has_author();
  if (author_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    author_ = new ::std::string;
  }
  author_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:hello.DefaultRequest.Article.author)
}
inline ::std::string* DefaultRequest_Article::mutable_author() {
  set_has_author();
  if (author_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    author_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:hello.DefaultRequest.Article.author)
  return author_;
}
inline ::std::string* DefaultRequest_Article::release_author() {
  clear_has_author();
  if (author_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = author_;
    author_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DefaultRequest_Article::set_allocated_author(::std::string* author) {
  if (author_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete author_;
  }
  if (author) {
    set_has_author();
    author_ = author;
  } else {
    clear_has_author();
    author_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:hello.DefaultRequest.Article.author)
}

// -------------------------------------------------------------------

// DefaultRequest

// required string sequence = 1;
inline bool DefaultRequest::has_sequence() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DefaultRequest::set_has_sequence() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DefaultRequest::clear_has_sequence() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DefaultRequest::clear_sequence() {
  if (sequence_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sequence_->clear();
  }
  clear_has_sequence();
}
inline const ::std::string& DefaultRequest::sequence() const {
  // @@protoc_insertion_point(field_get:hello.DefaultRequest.sequence)
  return *sequence_;
}
inline void DefaultRequest::set_sequence(const ::std::string& value) {
  set_has_sequence();
  if (sequence_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sequence_ = new ::std::string;
  }
  sequence_->assign(value);
  // @@protoc_insertion_point(field_set:hello.DefaultRequest.sequence)
}
inline void DefaultRequest::set_sequence(const char* value) {
  set_has_sequence();
  if (sequence_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sequence_ = new ::std::string;
  }
  sequence_->assign(value);
  // @@protoc_insertion_point(field_set_char:hello.DefaultRequest.sequence)
}
inline void DefaultRequest::set_sequence(const char* value, size_t size) {
  set_has_sequence();
  if (sequence_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sequence_ = new ::std::string;
  }
  sequence_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:hello.DefaultRequest.sequence)
}
inline ::std::string* DefaultRequest::mutable_sequence() {
  set_has_sequence();
  if (sequence_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sequence_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:hello.DefaultRequest.sequence)
  return sequence_;
}
inline ::std::string* DefaultRequest::release_sequence() {
  clear_has_sequence();
  if (sequence_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sequence_;
    sequence_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DefaultRequest::set_allocated_sequence(::std::string* sequence) {
  if (sequence_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sequence_;
  }
  if (sequence) {
    set_has_sequence();
    sequence_ = sequence;
  } else {
    clear_has_sequence();
    sequence_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:hello.DefaultRequest.sequence)
}

// required int32 type = 2;
inline bool DefaultRequest::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DefaultRequest::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DefaultRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DefaultRequest::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 DefaultRequest::type() const {
  // @@protoc_insertion_point(field_get:hello.DefaultRequest.type)
  return type_;
}
inline void DefaultRequest::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:hello.DefaultRequest.type)
}

// required int32 column3 = 3;
inline bool DefaultRequest::has_column3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DefaultRequest::set_has_column3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DefaultRequest::clear_has_column3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DefaultRequest::clear_column3() {
  column3_ = 0;
  clear_has_column3();
}
inline ::google::protobuf::int32 DefaultRequest::column3() const {
  // @@protoc_insertion_point(field_get:hello.DefaultRequest.column3)
  return column3_;
}
inline void DefaultRequest::set_column3(::google::protobuf::int32 value) {
  set_has_column3();
  column3_ = value;
  // @@protoc_insertion_point(field_set:hello.DefaultRequest.column3)
}

// required int32 column4 = 4;
inline bool DefaultRequest::has_column4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DefaultRequest::set_has_column4() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DefaultRequest::clear_has_column4() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DefaultRequest::clear_column4() {
  column4_ = 0;
  clear_has_column4();
}
inline ::google::protobuf::int32 DefaultRequest::column4() const {
  // @@protoc_insertion_point(field_get:hello.DefaultRequest.column4)
  return column4_;
}
inline void DefaultRequest::set_column4(::google::protobuf::int32 value) {
  set_has_column4();
  column4_ = value;
  // @@protoc_insertion_point(field_set:hello.DefaultRequest.column4)
}

// required int32 column5 = 5;
inline bool DefaultRequest::has_column5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DefaultRequest::set_has_column5() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DefaultRequest::clear_has_column5() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DefaultRequest::clear_column5() {
  column5_ = 0;
  clear_has_column5();
}
inline ::google::protobuf::int32 DefaultRequest::column5() const {
  // @@protoc_insertion_point(field_get:hello.DefaultRequest.column5)
  return column5_;
}
inline void DefaultRequest::set_column5(::google::protobuf::int32 value) {
  set_has_column5();
  column5_ = value;
  // @@protoc_insertion_point(field_set:hello.DefaultRequest.column5)
}

// required int32 column6 = 6;
inline bool DefaultRequest::has_column6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DefaultRequest::set_has_column6() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DefaultRequest::clear_has_column6() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DefaultRequest::clear_column6() {
  column6_ = 0;
  clear_has_column6();
}
inline ::google::protobuf::int32 DefaultRequest::column6() const {
  // @@protoc_insertion_point(field_get:hello.DefaultRequest.column6)
  return column6_;
}
inline void DefaultRequest::set_column6(::google::protobuf::int32 value) {
  set_has_column6();
  column6_ = value;
  // @@protoc_insertion_point(field_set:hello.DefaultRequest.column6)
}

// required int32 column7 = 7;
inline bool DefaultRequest::has_column7() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DefaultRequest::set_has_column7() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DefaultRequest::clear_has_column7() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DefaultRequest::clear_column7() {
  column7_ = 0;
  clear_has_column7();
}
inline ::google::protobuf::int32 DefaultRequest::column7() const {
  // @@protoc_insertion_point(field_get:hello.DefaultRequest.column7)
  return column7_;
}
inline void DefaultRequest::set_column7(::google::protobuf::int32 value) {
  set_has_column7();
  column7_ = value;
  // @@protoc_insertion_point(field_set:hello.DefaultRequest.column7)
}

// repeated .hello.DefaultRequest.Article articlelist = 8;
inline int DefaultRequest::articlelist_size() const {
  return articlelist_.size();
}
inline void DefaultRequest::clear_articlelist() {
  articlelist_.Clear();
}
inline const ::hello::DefaultRequest_Article& DefaultRequest::articlelist(int index) const {
  // @@protoc_insertion_point(field_get:hello.DefaultRequest.articlelist)
  return articlelist_.Get(index);
}
inline ::hello::DefaultRequest_Article* DefaultRequest::mutable_articlelist(int index) {
  // @@protoc_insertion_point(field_mutable:hello.DefaultRequest.articlelist)
  return articlelist_.Mutable(index);
}
inline ::hello::DefaultRequest_Article* DefaultRequest::add_articlelist() {
  // @@protoc_insertion_point(field_add:hello.DefaultRequest.articlelist)
  return articlelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::hello::DefaultRequest_Article >&
DefaultRequest::articlelist() const {
  // @@protoc_insertion_point(field_list:hello.DefaultRequest.articlelist)
  return articlelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::hello::DefaultRequest_Article >*
DefaultRequest::mutable_articlelist() {
  // @@protoc_insertion_point(field_mutable_list:hello.DefaultRequest.articlelist)
  return &articlelist_;
}

// -------------------------------------------------------------------

// DefaultRespond

// required string sequence = 1;
inline bool DefaultRespond::has_sequence() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DefaultRespond::set_has_sequence() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DefaultRespond::clear_has_sequence() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DefaultRespond::clear_sequence() {
  if (sequence_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sequence_->clear();
  }
  clear_has_sequence();
}
inline const ::std::string& DefaultRespond::sequence() const {
  // @@protoc_insertion_point(field_get:hello.DefaultRespond.sequence)
  return *sequence_;
}
inline void DefaultRespond::set_sequence(const ::std::string& value) {
  set_has_sequence();
  if (sequence_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sequence_ = new ::std::string;
  }
  sequence_->assign(value);
  // @@protoc_insertion_point(field_set:hello.DefaultRespond.sequence)
}
inline void DefaultRespond::set_sequence(const char* value) {
  set_has_sequence();
  if (sequence_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sequence_ = new ::std::string;
  }
  sequence_->assign(value);
  // @@protoc_insertion_point(field_set_char:hello.DefaultRespond.sequence)
}
inline void DefaultRespond::set_sequence(const char* value, size_t size) {
  set_has_sequence();
  if (sequence_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sequence_ = new ::std::string;
  }
  sequence_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:hello.DefaultRespond.sequence)
}
inline ::std::string* DefaultRespond::mutable_sequence() {
  set_has_sequence();
  if (sequence_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sequence_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:hello.DefaultRespond.sequence)
  return sequence_;
}
inline ::std::string* DefaultRespond::release_sequence() {
  clear_has_sequence();
  if (sequence_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sequence_;
    sequence_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DefaultRespond::set_allocated_sequence(::std::string* sequence) {
  if (sequence_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sequence_;
  }
  if (sequence) {
    set_has_sequence();
    sequence_ = sequence;
  } else {
    clear_has_sequence();
    sequence_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:hello.DefaultRespond.sequence)
}

// required int32 type = 2;
inline bool DefaultRespond::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DefaultRespond::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DefaultRespond::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DefaultRespond::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 DefaultRespond::type() const {
  // @@protoc_insertion_point(field_get:hello.DefaultRespond.type)
  return type_;
}
inline void DefaultRespond::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:hello.DefaultRespond.type)
}

// required string return = 3;
inline bool DefaultRespond::has_return_() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DefaultRespond::set_has_return_() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DefaultRespond::clear_has_return_() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DefaultRespond::clear_return_() {
  if (return__ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return__->clear();
  }
  clear_has_return_();
}
inline const ::std::string& DefaultRespond::return_() const {
  // @@protoc_insertion_point(field_get:hello.DefaultRespond.return)
  return *return__;
}
inline void DefaultRespond::set_return_(const ::std::string& value) {
  set_has_return_();
  if (return__ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return__ = new ::std::string;
  }
  return__->assign(value);
  // @@protoc_insertion_point(field_set:hello.DefaultRespond.return)
}
inline void DefaultRespond::set_return_(const char* value) {
  set_has_return_();
  if (return__ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return__ = new ::std::string;
  }
  return__->assign(value);
  // @@protoc_insertion_point(field_set_char:hello.DefaultRespond.return)
}
inline void DefaultRespond::set_return_(const char* value, size_t size) {
  set_has_return_();
  if (return__ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return__ = new ::std::string;
  }
  return__->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:hello.DefaultRespond.return)
}
inline ::std::string* DefaultRespond::mutable_return_() {
  set_has_return_();
  if (return__ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return__ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:hello.DefaultRespond.return)
  return return__;
}
inline ::std::string* DefaultRespond::release_return_() {
  clear_has_return_();
  if (return__ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = return__;
    return__ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DefaultRespond::set_allocated_return_(::std::string* return_) {
  if (return__ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete return__;
  }
  if (return_) {
    set_has_return_();
    return__ = return_;
  } else {
    clear_has_return_();
    return__ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:hello.DefaultRespond.return)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace hello

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_hello_2eproto__INCLUDED
