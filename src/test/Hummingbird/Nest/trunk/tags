!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ByteSizeLong	Hummingbirdp.pb.cc	/^size_t TransferRequest::ByteSizeLong() const {$/;"	f	class:Hummingbirdp::TransferRequest
ByteSizeLong	Hummingbirdp.pb.cc	/^size_t TransferRequest_Fragment::ByteSizeLong() const {$/;"	f	class:Hummingbirdp::TransferRequest_Fragment
ByteSizeLong	Hummingbirdp.pb.cc	/^size_t TransferRespond::ByteSizeLong() const {$/;"	f	class:Hummingbirdp::TransferRespond
ByteSizeLong	Hummingbirdp.pb.cc	/^size_t TransferRespond_CopyOnWrite::ByteSizeLong() const {$/;"	f	class:Hummingbirdp::TransferRespond_CopyOnWrite
CheckTypeAndMergeFrom	Hummingbirdp.pb.cc	/^void TransferRequest::CheckTypeAndMergeFrom($/;"	f	class:Hummingbirdp::TransferRequest
CheckTypeAndMergeFrom	Hummingbirdp.pb.cc	/^void TransferRequest_Fragment::CheckTypeAndMergeFrom($/;"	f	class:Hummingbirdp::TransferRequest_Fragment
CheckTypeAndMergeFrom	Hummingbirdp.pb.cc	/^void TransferRespond::CheckTypeAndMergeFrom($/;"	f	class:Hummingbirdp::TransferRespond
CheckTypeAndMergeFrom	Hummingbirdp.pb.cc	/^void TransferRespond_CopyOnWrite::CheckTypeAndMergeFrom($/;"	f	class:Hummingbirdp::TransferRespond_CopyOnWrite
Clear	Hummingbirdp.pb.cc	/^void TransferRequest::Clear() {$/;"	f	class:Hummingbirdp::TransferRequest
Clear	Hummingbirdp.pb.cc	/^void TransferRequest_Fragment::Clear() {$/;"	f	class:Hummingbirdp::TransferRequest_Fragment
Clear	Hummingbirdp.pb.cc	/^void TransferRespond::Clear() {$/;"	f	class:Hummingbirdp::TransferRespond
Clear	Hummingbirdp.pb.cc	/^void TransferRespond_CopyOnWrite::Clear() {$/;"	f	class:Hummingbirdp::TransferRespond_CopyOnWrite
CopyFrom	Hummingbirdp.pb.cc	/^void TransferRequest::CopyFrom(const TransferRequest& from) {$/;"	f	class:Hummingbirdp::TransferRequest
CopyFrom	Hummingbirdp.pb.cc	/^void TransferRequest_Fragment::CopyFrom(const TransferRequest_Fragment& from) {$/;"	f	class:Hummingbirdp::TransferRequest_Fragment
CopyFrom	Hummingbirdp.pb.cc	/^void TransferRespond::CopyFrom(const TransferRespond& from) {$/;"	f	class:Hummingbirdp::TransferRespond
CopyFrom	Hummingbirdp.pb.cc	/^void TransferRespond_CopyOnWrite::CopyFrom(const TransferRespond_CopyOnWrite& from) {$/;"	f	class:Hummingbirdp::TransferRespond_CopyOnWrite
CreateMaybeMessage	Hummingbirdp.pb.cc	/^template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Hummingbirdp::TransferRequest* Arena::CreateMaybeMessage< ::Hummingbirdp::TransferRequest >(Arena* arena) {$/;"	f	class:google::protobuf::Arena
CreateMaybeMessage	Hummingbirdp.pb.cc	/^template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Hummingbirdp::TransferRequest_Fragment* Arena::CreateMaybeMessage< ::Hummingbirdp::TransferRequest_Fragment >(Arena* arena) {$/;"	f	class:google::protobuf::Arena
CreateMaybeMessage	Hummingbirdp.pb.cc	/^template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Hummingbirdp::TransferRespond* Arena::CreateMaybeMessage< ::Hummingbirdp::TransferRespond >(Arena* arena) {$/;"	f	class:google::protobuf::Arena
CreateMaybeMessage	Hummingbirdp.pb.cc	/^template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Hummingbirdp::TransferRespond_CopyOnWrite* Arena::CreateMaybeMessage< ::Hummingbirdp::TransferRespond_CopyOnWrite >(Arena* arena) {$/;"	f	class:google::protobuf::Arena
DO_	Hummingbirdp.pb.cc	1144;"	d	file:
DO_	Hummingbirdp.pb.cc	1253;"	d	file:
DO_	Hummingbirdp.pb.cc	211;"	d	file:
DO_	Hummingbirdp.pb.cc	346;"	d	file:
DO_	Hummingbirdp.pb.cc	609;"	d	file:
DO_	Hummingbirdp.pb.cc	678;"	d	file:
DO_	Hummingbirdp.pb.cc	873;"	d	file:
DO_	Hummingbirdp.pb.cc	940;"	d	file:
GetTypeName	Hummingbirdp.pb.cc	/^::std::string TransferRequest::GetTypeName() const {$/;"	f	class:Hummingbirdp::TransferRequest
GetTypeName	Hummingbirdp.pb.cc	/^::std::string TransferRequest_Fragment::GetTypeName() const {$/;"	f	class:Hummingbirdp::TransferRequest_Fragment
GetTypeName	Hummingbirdp.pb.cc	/^::std::string TransferRespond::GetTypeName() const {$/;"	f	class:Hummingbirdp::TransferRespond
GetTypeName	Hummingbirdp.pb.cc	/^::std::string TransferRespond_CopyOnWrite::GetTypeName() const {$/;"	f	class:Hummingbirdp::TransferRespond_CopyOnWrite
Hummingbirdp	Hummingbirdp.pb.cc	/^namespace Hummingbirdp {$/;"	n	file:
Hummingbirdp_cached	Nest.cc	/^bool Hummingbirdp_cached(redisContext *hiredis_ctx, const char *distinct, const char *new_path)$/;"	f
Hummingbirdp_cached_ctrl	Nest.cc	/^bool Hummingbirdp_cached_ctrl(redisContext *hiredis_ctx, const char *command, const char *nest_hash_field, const char *nest_hash_value)$/;"	f
InitAsDefaultInstance	Hummingbirdp.pb.cc	/^void TransferRequest::InitAsDefaultInstance() {$/;"	f	class:Hummingbirdp::TransferRequest
InitAsDefaultInstance	Hummingbirdp.pb.cc	/^void TransferRequest_Fragment::InitAsDefaultInstance() {$/;"	f	class:Hummingbirdp::TransferRequest_Fragment
InitAsDefaultInstance	Hummingbirdp.pb.cc	/^void TransferRespond::InitAsDefaultInstance() {$/;"	f	class:Hummingbirdp::TransferRespond
InitAsDefaultInstance	Hummingbirdp.pb.cc	/^void TransferRespond_CopyOnWrite::InitAsDefaultInstance() {$/;"	f	class:Hummingbirdp::TransferRespond_CopyOnWrite
InitDefaults	Hummingbirdp.pb.cc	/^void InitDefaults() {$/;"	f	namespace:protobuf_Hummingbirdp_2eproto
InitDefaultsTransferRequest	Hummingbirdp.pb.cc	/^static void InitDefaultsTransferRequest() {$/;"	f	namespace:protobuf_Hummingbirdp_2eproto
InitDefaultsTransferRequest_Fragment	Hummingbirdp.pb.cc	/^static void InitDefaultsTransferRequest_Fragment() {$/;"	f	namespace:protobuf_Hummingbirdp_2eproto
InitDefaultsTransferRespond	Hummingbirdp.pb.cc	/^static void InitDefaultsTransferRespond() {$/;"	f	namespace:protobuf_Hummingbirdp_2eproto
InitDefaultsTransferRespond_CopyOnWrite	Hummingbirdp.pb.cc	/^static void InitDefaultsTransferRespond_CopyOnWrite() {$/;"	f	namespace:protobuf_Hummingbirdp_2eproto
InternalSwap	Hummingbirdp.pb.cc	/^void TransferRequest::InternalSwap(TransferRequest* other) {$/;"	f	class:Hummingbirdp::TransferRequest
InternalSwap	Hummingbirdp.pb.cc	/^void TransferRequest_Fragment::InternalSwap(TransferRequest_Fragment* other) {$/;"	f	class:Hummingbirdp::TransferRequest_Fragment
InternalSwap	Hummingbirdp.pb.cc	/^void TransferRespond::InternalSwap(TransferRespond* other) {$/;"	f	class:Hummingbirdp::TransferRespond
InternalSwap	Hummingbirdp.pb.cc	/^void TransferRespond_CopyOnWrite::InternalSwap(TransferRespond_CopyOnWrite* other) {$/;"	f	class:Hummingbirdp::TransferRespond_CopyOnWrite
IsInitialized	Hummingbirdp.pb.cc	/^bool TransferRequest::IsInitialized() const {$/;"	f	class:Hummingbirdp::TransferRequest
IsInitialized	Hummingbirdp.pb.cc	/^bool TransferRequest_Fragment::IsInitialized() const {$/;"	f	class:Hummingbirdp::TransferRequest_Fragment
IsInitialized	Hummingbirdp.pb.cc	/^bool TransferRespond::IsInitialized() const {$/;"	f	class:Hummingbirdp::TransferRespond
IsInitialized	Hummingbirdp.pb.cc	/^bool TransferRespond_CopyOnWrite::IsInitialized() const {$/;"	f	class:Hummingbirdp::TransferRespond_CopyOnWrite
MergeFrom	Hummingbirdp.pb.cc	/^void TransferRequest::MergeFrom(const TransferRequest& from) {$/;"	f	class:Hummingbirdp::TransferRequest
MergeFrom	Hummingbirdp.pb.cc	/^void TransferRequest_Fragment::MergeFrom(const TransferRequest_Fragment& from) {$/;"	f	class:Hummingbirdp::TransferRequest_Fragment
MergeFrom	Hummingbirdp.pb.cc	/^void TransferRespond::MergeFrom(const TransferRespond& from) {$/;"	f	class:Hummingbirdp::TransferRespond
MergeFrom	Hummingbirdp.pb.cc	/^void TransferRespond_CopyOnWrite::MergeFrom(const TransferRespond_CopyOnWrite& from) {$/;"	f	class:Hummingbirdp::TransferRespond_CopyOnWrite
MergePartialFromCodedStream	Hummingbirdp.pb.cc	/^bool TransferRequest::MergePartialFromCodedStream($/;"	f	class:Hummingbirdp::TransferRequest
MergePartialFromCodedStream	Hummingbirdp.pb.cc	/^bool TransferRequest_Fragment::MergePartialFromCodedStream($/;"	f	class:Hummingbirdp::TransferRequest_Fragment
MergePartialFromCodedStream	Hummingbirdp.pb.cc	/^bool TransferRespond::MergePartialFromCodedStream($/;"	f	class:Hummingbirdp::TransferRespond
MergePartialFromCodedStream	Hummingbirdp.pb.cc	/^bool TransferRespond_CopyOnWrite::MergePartialFromCodedStream($/;"	f	class:Hummingbirdp::TransferRespond_CopyOnWrite
SerializeWithCachedSizes	Hummingbirdp.pb.cc	/^void TransferRequest::SerializeWithCachedSizes($/;"	f	class:Hummingbirdp::TransferRequest
SerializeWithCachedSizes	Hummingbirdp.pb.cc	/^void TransferRequest_Fragment::SerializeWithCachedSizes($/;"	f	class:Hummingbirdp::TransferRequest_Fragment
SerializeWithCachedSizes	Hummingbirdp.pb.cc	/^void TransferRespond::SerializeWithCachedSizes($/;"	f	class:Hummingbirdp::TransferRespond
SerializeWithCachedSizes	Hummingbirdp.pb.cc	/^void TransferRespond_CopyOnWrite::SerializeWithCachedSizes($/;"	f	class:Hummingbirdp::TransferRespond_CopyOnWrite
SetCachedSize	Hummingbirdp.pb.cc	/^void TransferRequest::SetCachedSize(int size) const {$/;"	f	class:Hummingbirdp::TransferRequest
SetCachedSize	Hummingbirdp.pb.cc	/^void TransferRequest_Fragment::SetCachedSize(int size) const {$/;"	f	class:Hummingbirdp::TransferRequest_Fragment
SetCachedSize	Hummingbirdp.pb.cc	/^void TransferRespond::SetCachedSize(int size) const {$/;"	f	class:Hummingbirdp::TransferRespond
SetCachedSize	Hummingbirdp.pb.cc	/^void TransferRespond_CopyOnWrite::SetCachedSize(int size) const {$/;"	f	class:Hummingbirdp::TransferRespond_CopyOnWrite
SharedCtor	Hummingbirdp.pb.cc	/^void TransferRequest::SharedCtor() {$/;"	f	class:Hummingbirdp::TransferRequest
SharedCtor	Hummingbirdp.pb.cc	/^void TransferRequest_Fragment::SharedCtor() {$/;"	f	class:Hummingbirdp::TransferRequest_Fragment
SharedCtor	Hummingbirdp.pb.cc	/^void TransferRespond::SharedCtor() {$/;"	f	class:Hummingbirdp::TransferRespond
SharedCtor	Hummingbirdp.pb.cc	/^void TransferRespond_CopyOnWrite::SharedCtor() {$/;"	f	class:Hummingbirdp::TransferRespond_CopyOnWrite
SharedDtor	Hummingbirdp.pb.cc	/^void TransferRequest::SharedDtor() {$/;"	f	class:Hummingbirdp::TransferRequest
SharedDtor	Hummingbirdp.pb.cc	/^void TransferRequest_Fragment::SharedDtor() {$/;"	f	class:Hummingbirdp::TransferRequest_Fragment
SharedDtor	Hummingbirdp.pb.cc	/^void TransferRespond::SharedDtor() {$/;"	f	class:Hummingbirdp::TransferRespond
SharedDtor	Hummingbirdp.pb.cc	/^void TransferRespond_CopyOnWrite::SharedDtor() {$/;"	f	class:Hummingbirdp::TransferRespond_CopyOnWrite
Swap	Hummingbirdp.pb.cc	/^void TransferRequest::Swap(TransferRequest* other) {$/;"	f	class:Hummingbirdp::TransferRequest
Swap	Hummingbirdp.pb.cc	/^void TransferRequest_Fragment::Swap(TransferRequest_Fragment* other) {$/;"	f	class:Hummingbirdp::TransferRequest_Fragment
Swap	Hummingbirdp.pb.cc	/^void TransferRespond::Swap(TransferRespond* other) {$/;"	f	class:Hummingbirdp::TransferRespond
Swap	Hummingbirdp.pb.cc	/^void TransferRespond_CopyOnWrite::Swap(TransferRespond_CopyOnWrite* other) {$/;"	f	class:Hummingbirdp::TransferRespond_CopyOnWrite
TransferRequest	Hummingbirdp.pb.cc	/^TransferRequest::TransferRequest()$/;"	f	class:Hummingbirdp::TransferRequest
TransferRequest	Hummingbirdp.pb.cc	/^TransferRequest::TransferRequest(const TransferRequest& from)$/;"	f	class:Hummingbirdp::TransferRequest
TransferRequestDefaultTypeInternal	Hummingbirdp.pb.cc	/^class TransferRequestDefaultTypeInternal {$/;"	c	namespace:Hummingbirdp	file:
TransferRequest_Fragment	Hummingbirdp.pb.cc	/^TransferRequest_Fragment::TransferRequest_Fragment()$/;"	f	class:Hummingbirdp::TransferRequest_Fragment
TransferRequest_Fragment	Hummingbirdp.pb.cc	/^TransferRequest_Fragment::TransferRequest_Fragment(const TransferRequest_Fragment& from)$/;"	f	class:Hummingbirdp::TransferRequest_Fragment
TransferRequest_FragmentDefaultTypeInternal	Hummingbirdp.pb.cc	/^class TransferRequest_FragmentDefaultTypeInternal {$/;"	c	namespace:Hummingbirdp	file:
TransferRespond	Hummingbirdp.pb.cc	/^TransferRespond::TransferRespond()$/;"	f	class:Hummingbirdp::TransferRespond
TransferRespond	Hummingbirdp.pb.cc	/^TransferRespond::TransferRespond(const TransferRespond& from)$/;"	f	class:Hummingbirdp::TransferRespond
TransferRespondDefaultTypeInternal	Hummingbirdp.pb.cc	/^class TransferRespondDefaultTypeInternal {$/;"	c	namespace:Hummingbirdp	file:
TransferRespond_CopyOnWrite	Hummingbirdp.pb.cc	/^TransferRespond_CopyOnWrite::TransferRespond_CopyOnWrite()$/;"	f	class:Hummingbirdp::TransferRespond_CopyOnWrite
TransferRespond_CopyOnWrite	Hummingbirdp.pb.cc	/^TransferRespond_CopyOnWrite::TransferRespond_CopyOnWrite(const TransferRespond_CopyOnWrite& from)$/;"	f	class:Hummingbirdp::TransferRespond_CopyOnWrite
TransferRespond_CopyOnWriteDefaultTypeInternal	Hummingbirdp.pb.cc	/^class TransferRespond_CopyOnWriteDefaultTypeInternal {$/;"	c	namespace:Hummingbirdp	file:
_TransferRequest_Fragment_default_instance_	Hummingbirdp.pb.cc	/^} _TransferRequest_Fragment_default_instance_;$/;"	m	namespace:Hummingbirdp	typeref:class:Hummingbirdp::TransferRequest_FragmentDefaultTypeInternal	file:
_TransferRequest_default_instance_	Hummingbirdp.pb.cc	/^} _TransferRequest_default_instance_;$/;"	m	namespace:Hummingbirdp	typeref:class:Hummingbirdp::TransferRequestDefaultTypeInternal	file:
_TransferRespond_CopyOnWrite_default_instance_	Hummingbirdp.pb.cc	/^} _TransferRespond_CopyOnWrite_default_instance_;$/;"	m	namespace:Hummingbirdp	typeref:class:Hummingbirdp::TransferRespond_CopyOnWriteDefaultTypeInternal	file:
_TransferRespond_default_instance_	Hummingbirdp.pb.cc	/^} _TransferRespond_default_instance_;$/;"	m	namespace:Hummingbirdp	typeref:class:Hummingbirdp::TransferRespondDefaultTypeInternal	file:
__set_errno	Nest.cc	28;"	d	file:
_instance	Hummingbirdp.pb.cc	/^      _instance;$/;"	m	class:Hummingbirdp::TransferRequestDefaultTypeInternal	file:
_instance	Hummingbirdp.pb.cc	/^      _instance;$/;"	m	class:Hummingbirdp::TransferRequest_FragmentDefaultTypeInternal	file:
_instance	Hummingbirdp.pb.cc	/^      _instance;$/;"	m	class:Hummingbirdp::TransferRespondDefaultTypeInternal	file:
_instance	Hummingbirdp.pb.cc	/^      _instance;$/;"	m	class:Hummingbirdp::TransferRespond_CopyOnWriteDefaultTypeInternal	file:
dealer	Nest.cc	/^void *dealer;$/;"	v
default_instance	Hummingbirdp.pb.cc	/^const TransferRequest& TransferRequest::default_instance() {$/;"	f	class:Hummingbirdp::TransferRequest
default_instance	Hummingbirdp.pb.cc	/^const TransferRequest_Fragment& TransferRequest_Fragment::default_instance() {$/;"	f	class:Hummingbirdp::TransferRequest_Fragment
default_instance	Hummingbirdp.pb.cc	/^const TransferRespond& TransferRespond::default_instance() {$/;"	f	class:Hummingbirdp::TransferRespond
default_instance	Hummingbirdp.pb.cc	/^const TransferRespond_CopyOnWrite& TransferRespond_CopyOnWrite::default_instance() {$/;"	f	class:Hummingbirdp::TransferRespond_CopyOnWrite
fragment_to_file	Nest.cc	/^bool fragment_to_file(const Hummingbirdp::TransferRequest &transferRequest, Hummingbirdp::TransferRespond &transferRespond, redisContext *hiredis_ctx)$/;"	f
google	Hummingbirdp.pb.cc	/^namespace google {$/;"	n	file:
kCopyonwriteFieldNumber	Hummingbirdp.pb.cc	/^const int TransferRespond::kCopyonwriteFieldNumber;$/;"	m	class:Hummingbirdp::TransferRespond	file:
kCrc32FieldNumber	Hummingbirdp.pb.cc	/^const int TransferRequest_Fragment::kCrc32FieldNumber;$/;"	m	class:Hummingbirdp::TransferRequest_Fragment	file:
kCreatedFieldNumber	Hummingbirdp.pb.cc	/^const int TransferRequest::kCreatedFieldNumber;$/;"	m	class:Hummingbirdp::TransferRequest	file:
kCreatedFieldNumber	Hummingbirdp.pb.cc	/^const int TransferRespond::kCreatedFieldNumber;$/;"	m	class:Hummingbirdp::TransferRespond	file:
kDistinctFieldNumber	Hummingbirdp.pb.cc	/^const int TransferRequest_Fragment::kDistinctFieldNumber;$/;"	m	class:Hummingbirdp::TransferRequest_Fragment	file:
kDistinctFieldNumber	Hummingbirdp.pb.cc	/^const int TransferRespond_CopyOnWrite::kDistinctFieldNumber;$/;"	m	class:Hummingbirdp::TransferRespond_CopyOnWrite	file:
kEofFieldNumber	Hummingbirdp.pb.cc	/^const int TransferRequest_Fragment::kEofFieldNumber;$/;"	m	class:Hummingbirdp::TransferRequest_Fragment	file:
kErrnumFieldNumber	Hummingbirdp.pb.cc	/^const int TransferRespond::kErrnumFieldNumber;$/;"	m	class:Hummingbirdp::TransferRespond	file:
kErrstringFieldNumber	Hummingbirdp.pb.cc	/^const int TransferRespond::kErrstringFieldNumber;$/;"	m	class:Hummingbirdp::TransferRespond	file:
kFragmentFieldNumber	Hummingbirdp.pb.cc	/^const int TransferRequest::kFragmentFieldNumber;$/;"	m	class:Hummingbirdp::TransferRequest	file:
kNameFieldNumber	Hummingbirdp.pb.cc	/^const int TransferRequest_Fragment::kNameFieldNumber;$/;"	m	class:Hummingbirdp::TransferRequest_Fragment	file:
kNameFieldNumber	Hummingbirdp.pb.cc	/^const int TransferRespond_CopyOnWrite::kNameFieldNumber;$/;"	m	class:Hummingbirdp::TransferRespond_CopyOnWrite	file:
kOffsetFieldNumber	Hummingbirdp.pb.cc	/^const int TransferRequest_Fragment::kOffsetFieldNumber;$/;"	m	class:Hummingbirdp::TransferRequest_Fragment	file:
kPathFieldNumber	Hummingbirdp.pb.cc	/^const int TransferRequest_Fragment::kPathFieldNumber;$/;"	m	class:Hummingbirdp::TransferRequest_Fragment	file:
kPathFieldNumber	Hummingbirdp.pb.cc	/^const int TransferRespond_CopyOnWrite::kPathFieldNumber;$/;"	m	class:Hummingbirdp::TransferRespond_CopyOnWrite	file:
kPtrFieldNumber	Hummingbirdp.pb.cc	/^const int TransferRequest_Fragment::kPtrFieldNumber;$/;"	m	class:Hummingbirdp::TransferRequest_Fragment	file:
kSeqFieldNumber	Hummingbirdp.pb.cc	/^const int TransferRequest::kSeqFieldNumber;$/;"	m	class:Hummingbirdp::TransferRequest	file:
kSeqFieldNumber	Hummingbirdp.pb.cc	/^const int TransferRespond::kSeqFieldNumber;$/;"	m	class:Hummingbirdp::TransferRespond	file:
kSrclenFieldNumber	Hummingbirdp.pb.cc	/^const int TransferRequest_Fragment::kSrclenFieldNumber;$/;"	m	class:Hummingbirdp::TransferRequest_Fragment	file:
kTidFieldNumber	Hummingbirdp.pb.cc	/^const int TransferRespond::kTidFieldNumber;$/;"	m	class:Hummingbirdp::TransferRespond	file:
likely	Nest.cc	32;"	d	file:
likely	Nest.cc	35;"	d	file:
main	Nest.cc	/^int main(int argc, char **argv)$/;"	f
my_free	Nest.cc	/^void my_free(void *data, void *hint)$/;"	f
nest_port	Nest.cc	/^int nest_port = 49001;$/;"	v
nest_routine	Nest.cc	/^void *nest_routine(void *arg)$/;"	f
nest_term	Nest.cc	/^int nest_term()$/;"	f
protobuf	Hummingbirdp.pb.cc	/^namespace protobuf {$/;"	n	namespace:google	file:
protobuf_Hummingbirdp_2eproto	Hummingbirdp.pb.cc	/^namespace protobuf_Hummingbirdp_2eproto {$/;"	n	file:
received_message	Nest.cc	/^void received_message(void *nest, void *receivedBuffer, int receivedBufferSize, redisContext *hiredis_ctx)$/;"	f
redis_host	Nest.cc	/^char redis_host[NAME_MAX] = "127.0.0.1";$/;"	v
redis_port	Nest.cc	/^int redis_port = 6379;$/;"	v
root	Nest.cc	/^log4cplus::Logger root = log4cplus::Logger::getRoot();$/;"	v
router	Nest.cc	/^void *router;$/;"	v
scc_info_TransferRequest	Hummingbirdp.pb.cc	/^::google::protobuf::internal::SCCInfo<1> scc_info_TransferRequest =$/;"	m	namespace:protobuf_Hummingbirdp_2eproto	file:
scc_info_TransferRequest_Fragment	Hummingbirdp.pb.cc	/^::google::protobuf::internal::SCCInfo<0> scc_info_TransferRequest_Fragment =$/;"	m	namespace:protobuf_Hummingbirdp_2eproto	file:
scc_info_TransferRespond	Hummingbirdp.pb.cc	/^::google::protobuf::internal::SCCInfo<1> scc_info_TransferRespond =$/;"	m	namespace:protobuf_Hummingbirdp_2eproto	file:
scc_info_TransferRespond_CopyOnWrite	Hummingbirdp.pb.cc	/^::google::protobuf::internal::SCCInfo<0> scc_info_TransferRespond_CopyOnWrite =$/;"	m	namespace:protobuf_Hummingbirdp_2eproto	file:
threads	Nest.cc	/^int threads = ZMQ_POLLITEMS_DFLT;$/;"	v
unlikely	Nest.cc	33;"	d	file:
unlikely	Nest.cc	36;"	d	file:
workspace	Nest.cc	/^char workspace[PATH_MAX] = _PATH_TMP;$/;"	v
zmq_ctx	Nest.cc	/^void *zmq_ctx;$/;"	v
~TransferRequest	Hummingbirdp.pb.cc	/^TransferRequest::~TransferRequest() {$/;"	f	class:Hummingbirdp::TransferRequest
~TransferRequest_Fragment	Hummingbirdp.pb.cc	/^TransferRequest_Fragment::~TransferRequest_Fragment() {$/;"	f	class:Hummingbirdp::TransferRequest_Fragment
~TransferRespond	Hummingbirdp.pb.cc	/^TransferRespond::~TransferRespond() {$/;"	f	class:Hummingbirdp::TransferRespond
~TransferRespond_CopyOnWrite	Hummingbirdp.pb.cc	/^TransferRespond_CopyOnWrite::~TransferRespond_CopyOnWrite() {$/;"	f	class:Hummingbirdp::TransferRespond_CopyOnWrite
